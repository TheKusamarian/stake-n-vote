{"version":3,"sources":["../src/wallets.ts"],"names":["polkadotjs","subwallet","talisman","nova","alephzeroSigner","nightly","nightlyConnect","allSubstrateWallets","getSubstrateWallet","id","wallet","isWalletInstalled","_a","_b","injectedWindow","injectedExtension","novaIsInstalled","enableWallet","appName","__async","adapter","getNightlyConnectAdapter","__spreadProps","__spreadValues","cb","unsub","e","injectedWindowProvider","injected"],"mappings":"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","sourcesContent":["import { SubstrateWallet, SubstrateWalletPlatform } from '@/types'\nimport type {\n  InjectedAccount,\n  InjectedExtension,\n  InjectedWindow,\n} from '@polkadot/extension-inject/types'\nimport { getNightlyConnectAdapter } from './helpers/getNightlyAdapter'\n\n/**\n * Defined Substrate Wallet Constants\n */\nexport const polkadotjs: SubstrateWallet = {\n  id: 'polkadot-js',\n  name: 'Polkadot{.js}',\n  platforms: [SubstrateWalletPlatform.Browser],\n  urls: {\n    website: 'https://polkadot.js.org/extension/',\n    chromeExtension:\n      'https://chrome.google.com/webstore/detail/polkadot%7Bjs%7D-extension/mopnmbcafieddcagagdcbnhejhlodfdd',\n    firefoxExtension: 'https://addons.mozilla.org/en-US/firefox/addon/polkadot-js-extension/',\n  },\n  logoUrls: [\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/polkadot@128w.png',\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/polkadot@512w.png',\n  ],\n}\n\nexport const subwallet: SubstrateWallet = {\n  id: 'subwallet-js',\n  name: 'SubWallet',\n  platforms: [SubstrateWalletPlatform.Browser],\n  urls: {\n    website: 'https://subwallet.app/',\n    chromeExtension:\n      'https://chrome.google.com/webstore/detail/subwallet-polkadot-extens/onhogfjeacnfoofkfgppdlbmlmnplgbn',\n    firefoxExtension: 'https://addons.mozilla.org/en-US/firefox/addon/subwallet/',\n  },\n  logoUrls: [\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/subwallet@128w.png',\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/subwallet@512w.png',\n  ],\n}\n\nexport const talisman: SubstrateWallet = {\n  id: 'talisman',\n  name: 'Talisman',\n  platforms: [SubstrateWalletPlatform.Browser],\n  urls: {\n    website: 'https://www.talisman.xyz/',\n    chromeExtension:\n      'https://chrome.google.com/webstore/detail/talisman-polkadot-wallet/fijngjgcjhjmmpcmkeiomlglpeiijkld',\n    firefoxExtension: 'https://addons.mozilla.org/en-US/firefox/addon/talisman-wallet-extension/',\n  },\n  logoUrls: [\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/talisman@128w.png',\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/talisman@512w.png',\n  ],\n}\n\nexport const nova: SubstrateWallet = {\n  id: 'nova',\n  name: 'Nova Wallet',\n  platforms: [SubstrateWalletPlatform.Android, SubstrateWalletPlatform.iOS],\n  urls: {\n    website: 'https://novawallet.io/',\n    androidApp: 'https://play.google.com/store/apps/details?id=io.novafoundation.nova.market',\n    iosApp: 'https://apps.apple.com/app/nova-polkadot-kusama-wallet/id1597119355',\n  },\n  logoUrls: [\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/nova@128w.png',\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/nova@512w.png',\n  ],\n}\n\nexport const alephzeroSigner: SubstrateWallet = {\n  id: 'aleph-zero-signer',\n  name: 'Aleph Zero Signer',\n  platforms: [SubstrateWalletPlatform.Browser],\n  urls: {\n    website: 'https://alephzero.org/signer',\n    chromeExtension: 'https://chrome.google.com/webstore/detail/opbinaebpmphpefcimknblieddamhmol',\n    firefoxExtension: 'https://addons.mozilla.org/en-US/firefox/addon/aleph-zero-signer/',\n  },\n  logoUrls: [\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/aleph-zero-signer@128w.png',\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/aleph-zero-signer@512w.png',\n  ],\n}\n\nexport const nightly: SubstrateWallet = {\n  id: 'Nightly',\n  name: 'Nightly Wallet',\n  platforms: [SubstrateWalletPlatform.Browser],\n  urls: {\n    website: 'https://wallet.nightly.app',\n    chromeExtension:\n      'https://chrome.google.com/webstore/detail/nightly/fiikommddbeccaoicoejoniammnalkfa?hl=en',\n    firefoxExtension: 'https://addons.mozilla.org/en-GB/firefox/addon/nightly-app/',\n  },\n  logoUrls: [\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/nightly@128w.png',\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/nightly@512w.png',\n  ],\n}\n\nexport const nightlyConnect: SubstrateWallet = {\n  id: 'NightlyConnect',\n  name: 'Nightly Connect',\n  platforms: [\n    SubstrateWalletPlatform.Browser,\n    SubstrateWalletPlatform.Android,\n    SubstrateWalletPlatform.iOS,\n  ],\n  urls: {\n    website: 'https://connect.nightly.app/docs/',\n  },\n  logoUrls: [\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/nightlyConnect@128w.png',\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/nightlyConnect@512w.png',\n  ],\n}\n/**\n * Exporting all wallets separately\n */\nexport const allSubstrateWallets: SubstrateWallet[] = [\n  subwallet,\n  talisman,\n  polkadotjs,\n  nova,\n  alephzeroSigner,\n  nightly,\n  nightlyConnect,\n]\n\n/**\n * Returns wallet (if existent) for given identifier (`id` field).\n */\nexport const getSubstrateWallet = (id: string): SubstrateWallet | undefined => {\n  return allSubstrateWallets.find((wallet) => wallet.id === id)\n}\n\n/*\n * Returns `true` if wallet is installed, `false` if not, and\n * `undefined` if the environment is not a client browser.\n *\n * TODO: Check chain-specific availability (i.e. NightlyConnect is only available on Aleph Zero)\n */\nexport const isWalletInstalled = (wallet: SubstrateWallet) => {\n  try {\n    if (typeof window === 'undefined') return undefined\n    const injectedWindow = window as Window & InjectedWindow\n    const injectedExtension = injectedWindow?.injectedWeb3?.[wallet.id]\n\n    // Special case for Nova Wallet\n    const novaIsInstalled = !!(injectedWindow as any).walletExtension?.isNovaWallet\n    if (novaIsInstalled && wallet.id === polkadotjs.id) return false\n    if (novaIsInstalled && wallet.id === nova.id) return true\n\n    // A special case for NightlyConnect, as it serves as a selector.\n    if (wallet.id === nightlyConnect.id) return true\n\n    return !!injectedExtension\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Enables the given wallet (if existent) and returns the injected extension.\n */\nexport const enableWallet = async (wallet: SubstrateWallet, appName: string) => {\n  if (!isWalletInstalled(wallet)) return undefined\n\n  try {\n    if (typeof window === 'undefined') return undefined\n    const injectedWindow = window as InjectedWindow\n\n    // NightlyConnect is a selector, it needs a special case to handle the connection\n    if (wallet.id === nightlyConnect.id) {\n      let adapter: any\n      try {\n        adapter = await getNightlyConnectAdapter(appName)\n        await adapter.connect()\n        const injectedExtension: InjectedExtension = {\n          accounts: {\n            ...adapter.accounts,\n            // A special case that probably results from the way packages are bundled\n            subscribe: (cb: (accounts: InjectedAccount[]) => void | Promise<void>) => {\n              const unsub = adapter.accounts.subscribe(cb)\n              adapter.accounts._triggerSubs()\n              return unsub\n            },\n          },\n          signer: adapter.signer,\n          name: wallet.id,\n          version: '0.1.10',\n        }\n        return injectedExtension\n      } catch (e) {\n        await adapter?.disconnect().catch(() => {})\n        throw new Error('Error while enabling NightlyConnect')\n      }\n    }\n\n    const injectedWindowProvider =\n      injectedWindow?.injectedWeb3?.[wallet.id === nova.id ? polkadotjs.id : wallet.id]\n    if (!injectedWindowProvider?.enable)\n      throw new Error('No according `InjectedWindowProvider` found.')\n\n    const injected = await injectedWindowProvider.enable(appName)\n    const injectedExtension: InjectedExtension = {\n      ...injected,\n      name: wallet.id,\n      version: injectedWindowProvider.version || '',\n    }\n    return injectedExtension\n  } catch (e) {\n    console.error('Error while enabling wallet', e)\n    return undefined\n  }\n}\n"]}